(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{96:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return b})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var a=t(3),l=t(7),r=(t(0),t(106)),i=["components"],b={id:"developers-guide",title:"Developer's Guide",sidebar_label:"Developer's Guide"},o={unversionedId:"developers-guide",id:"developers-guide",isDocsHomePage:!1,title:"Developer's Guide",description:"This documentation aims to help you become an active contributor to Mariana Trench.",source:"@site/documentation/developers_guide.md",slug:"/developers-guide",permalink:"/docs/developers-guide",editUrl:"https://github.com/facebook/mariana-trench/tree/main/documentation/website/documentation/developers_guide.md",version:"current",sidebar_label:"Developer's Guide",sidebar:"someSidebar",previous:{title:"Models",permalink:"/docs/models"}},c=[{value:"Building From Source",id:"building-from-source",children:[{value:"Support",id:"support",children:[]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Install all dependencies with Homebrew",id:"install-all-dependencies-with-homebrew",children:[]},{value:"Building Redex",id:"building-redex",children:[]},{value:"Building Mariana Trench",id:"building-mariana-trench",children:[]}]},{value:"Development",id:"development",children:[]},{value:"Run the tests",id:"run-the-tests",children:[]}],s={toc:c};function p(e){var n=e.components,t=Object(l.a)(e,i);return Object(r.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This documentation aims to help you become an active contributor to Mariana Trench."),Object(r.b)("h2",{id:"building-from-source"},"Building From Source"),Object(r.b)("h3",{id:"support"},"Support"),Object(r.b)("p",null,"Mariana Trench is currently supported on ",Object(r.b)("strong",{parentName:"p"},"macOS")," (tested on ",Object(r.b)("em",{parentName:"p"},"Big Sur 11.4"),") and ",Object(r.b)("strong",{parentName:"p"},"Linux")," (tested on ",Object(r.b)("em",{parentName:"p"},"Ubuntu 20.04 LTS"),")."),Object(r.b)("h3",{id:"dependencies"},"Dependencies"),Object(r.b)("p",null,"Below is a list of the required dependencies. Most of them can be installed with ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew")),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A C++ compiler that supports C++17 (GCC >= 7 or Clang >= 5)"),Object(r.b)("li",{parentName:"ul"},"Python >= 3.6"),Object(r.b)("li",{parentName:"ul"},"CMake >= 3.19.3"),Object(r.b)("li",{parentName:"ul"},"zlib"),Object(r.b)("li",{parentName:"ul"},"Boost >= 1.75.0"),Object(r.b)("li",{parentName:"ul"},"GoogleTest >= 1.10.0"),Object(r.b)("li",{parentName:"ul"},"JsonCpp >= 1.9.4"),Object(r.b)("li",{parentName:"ul"},"fmt >= 7.1.2"),Object(r.b)("li",{parentName:"ul"},"RE2"),Object(r.b)("li",{parentName:"ul"},"Java (Optional)"),Object(r.b)("li",{parentName:"ul"},"Android SDK (Optional)"),Object(r.b)("li",{parentName:"ul"},"Redex (master)")),Object(r.b)("h3",{id:"install-all-dependencies-with-homebrew"},"Install all dependencies with Homebrew"),Object(r.b)("p",null,"First, follow the instructions to install ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew"))," on your system."),Object(r.b)("p",null,"Then, make sure homebrew is up-to-date:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ brew update\n$ brew upgrade\n")),Object(r.b)("p",null,"Finally, install all the dependencies."),Object(r.b)("p",null,"On ",Object(r.b)("strong",{parentName:"p"},"macOS"),", run:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ brew install python3 cmake zlib boost googletest jsoncpp fmt re2\n")),Object(r.b)("p",null,"On ",Object(r.b)("strong",{parentName:"p"},"Linux"),", run:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ brew install cmake zlib boost jsoncpp fmt re2\n$ brew install googletest --build-from-source # The package is currently broken.\n$ export CMAKE_PREFIX_PATH=/home/linuxbrew/.linuxbrew/opt/jsoncpp:/home/linuxbrew/.linuxbrew/opt/zlib\n")),Object(r.b)("p",null,"On ",Object(r.b)("strong",{parentName:"p"},"Linux"),", you will need to install Java to run the tests. For instance, on ",Object(r.b)("strong",{parentName:"p"},"Ubuntu"),", run:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ sudo apt install default-jre default-jdk\n")),Object(r.b)("h3",{id:"building-redex"},"Building Redex"),Object(r.b)("p",null,"You will need to choose a temporary directory to store the C++ binaries and libraries for Redex and Mariana Trench. You can safely remove these after installation if you do not intend to update the C++ code. Pick a directory and set the variable ",Object(r.b)("inlineCode",{parentName:"p"},"MT_INSTALL_DIRECTORY")," to its absolute path, for instance:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ MT_INSTALL_DIRECTORY="$PWD/install"\n')),Object(r.b)("p",null,"To build ",Object(r.b)("a",{parentName:"p",href:"https://fbredex.com/"},"Redex")," from source, run:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ brew install git\n$ git clone https://github.com/facebook/redex.git\n$ cd redex\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_INSTALL_PREFIX="$MT_INSTALL_DIRECTORY" ..\n$ make -j4\n$ make install\n')),Object(r.b)("h3",{id:"building-mariana-trench"},"Building Mariana Trench"),Object(r.b)("p",null,"Now that we have our dependencies ready, let's build the Mariana Trench binary:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ cd ../..  # Go back to the root directory\n$ mkdir build\n$ cd build\n$ cmake -DREDEX_ROOT="$MT_INSTALL_DIRECTORY" -DCMAKE_INSTALL_PREFIX="$MT_INSTALL_DIRECTORY" ..\n$ make -j4\n$ make install\n')),Object(r.b)("p",null,"Finally, let's install Mariana Trench as a Python package.\nWe recommend to run this step inside a ",Object(r.b)("a",{parentName:"p",href:"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments"},"virtual environment"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ cd .. # Go back to the root directory\n$ python scripts/setup.py \\\n  --binary "$MT_INSTALL_DIRECTORY/bin/mariana-trench-binary" \\\n  --pyredex "$MT_INSTALL_DIRECTORY/bin/pyredex" \\\n  install\n')),Object(r.b)("h2",{id:"development"},"Development"),Object(r.b)("p",null,"If you are making changes to Mariana Trench, you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"mariana-trench")," wrapper inside the build directory:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ ./mariana-trench --help\n")),Object(r.b)("p",null,"This way, you don't have to call ",Object(r.b)("inlineCode",{parentName:"p"},"scripts/setup.py")," between every changes.\nPython changes will be automatically picked up.\nC++ changes will be picked up after running ",Object(r.b)("inlineCode",{parentName:"p"},"make"),"."),Object(r.b)("p",null,"Note that you will need to install all python dependencies:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ pip install pyre_extensions fb-sapp\n")),Object(r.b)("h2",{id:"run-the-tests"},"Run the tests"),Object(r.b)("p",null,"To run the tests after building Mariana Trench, use:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ make check\n")))}p.isMDXComponent=!0}}]);